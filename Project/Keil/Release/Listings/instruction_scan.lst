C51 COMPILER V9.60.7.0   INSTRUCTION_SCAN                                                  06/05/2024 13:36:14 PAGE 1   


C51 COMPILER V9.60.7.0, COMPILATION OF MODULE INSTRUCTION_SCAN
OBJECT MODULE PLACED IN .\Release\Objects\instruction_scan.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE ..\..\User\instruction_scan.c LARGE OPTIMIZE(8,SIZE) BROWSE INTVECTOR(0X
                    -000C) INCDIR(..\..\Libraries\Include;..\..\User;..\..\User\lib;..\..\Hardware) INTERVAL(3) DEBUG OBJECTEXTEND PRINT(.\Re
                    -lease\Listings\instruction_scan.lst) TABS(2) OBJECT(.\Release\Objects\instruction_scan.obj)

line level    source

   1          // 扫描是否有指令，并根据指令发送对应的数据，
   2          // 或者是当某一个功能的状态有更新，发送对应的数据
   3          #include "instruction_scan.h"
   4          
   5          // 用bit定义，来节省空间
   6          volatile bit getAllStatus = 0;   // 获取所有功能的状态
   7          volatile bit getGear = 0;        // 获取挡位状态 / 得到了挡位的状态
   8          volatile bit getBattery = 0;     // 获取电池状态 / 得到了电池的状态（电池电量，单位：百分比）
   9          volatile bit getBrake = 0;       // 获取刹车状态 / 得到了刹车的状态
  10          volatile bit getLeftTurn = 0;    // 获取左转向灯的状态 / 得到了左转向灯的状态
  11          volatile bit getRightTurn = 0;   // 获取右转向灯的状态 / 得到了右转向灯的状态
  12          volatile bit getHighBeam = 0;    // 获取远光灯的状态 / 得到了远光灯的状态
  13          volatile bit getEngineSpeed = 0; // 获取发动机的转速 / 得到了发动机的转速
  14          volatile bit getSpeed = 0;       // 获取时速 / 得到了时速
  15          volatile bit getFuel = 0;        // 获取油量 / 得到了油量（单位：百分比）
  16          volatile bit getWaterTemp = 0;   // 获取水温 / 得到了水温
  17          
  18          volatile bit getTotalMileage = 0;    // 获取大计里程 / 得到了大计里程
  19          volatile bit getSubTotalMileage = 0; // 获取小计里程 / 得到了小计里程
  20          
  21          void instruction_scan(void)
  22          {
  23   1          if (getAllStatus)
  24   1          {
  25   2              // 如果要获取所有功能的状态
  26   2              getAllStatus = 0; // 清除标志位
  27   2      
  28   2      #if USE_MY_DEBUG
                      printf("getAllStatus\n");
              #endif
  31   2          }
  32   1      
  33   1          if (getGear)
  34   1          {
  35   2              // 如果要获取挡位的状态
  36   2              getGear = 0; //
  37   2      
  38   2      #if USE_MY_DEBUG
                      printf("getGear\n");
              #endif
  41   2      
  42   2              send_data(SEND_GEAR, fun_info.gear); // 发送当前挡位的状态
  43   2          }
  44   1      
  45   1          if (getBattery)
  46   1          {
  47   2              // 如果要获取电池电量的状态
  48   2              getBattery = 0;
  49   2      
  50   2      #if USE_MY_DEBUG
                      printf("getBattery\n");
              #endif
  53   2          }
C51 COMPILER V9.60.7.0   INSTRUCTION_SCAN                                                  06/05/2024 13:36:14 PAGE 2   

  54   1      
  55   1          if (getBrake)
  56   1          {
  57   2              // 如果要获取获取刹车的状态
  58   2              getBrake = 0;
  59   2      
  60   2      #if USE_MY_DEBUG
                      printf("getBrake\n");
              #endif
  63   2      
  64   2              send_data(SEND_BARKE, fun_info.brake); // 发送当前刹车的状态
  65   2          }
  66   1      
  67   1          if (getLeftTurn)
  68   1          {
  69   2              // 如果要获取左转向灯的状态
  70   2              getLeftTurn = 0;
  71   2      
  72   2      #if USE_MY_DEBUG
                      printf("getLeftTurn\n");
              #endif
  75   2      
  76   2              send_data(SEND_LEFT_TURN, fun_info.left_turn); // 发送当前左转向灯的状态
  77   2          }
  78   1      
  79   1          if (getRightTurn)
  80   1          {
  81   2              // 如果要获取右转向灯的状态
  82   2              getRightTurn = 0;
  83   2      
  84   2              // uart0_sendstr("getRightTurn\n");
  85   2      
  86   2              send_data(SEND_RIGHT_TURN, fun_info.right_turn); // 发送当前右转向灯的状态
  87   2          }
  88   1      
  89   1          if (getHighBeam)
  90   1          {
  91   2              // 如果要获取远光灯的状态
  92   2              getHighBeam = 0;
  93   2      
  94   2              // uart0_sendstr("getHighBeam\n");
  95   2      
  96   2              send_data(SEND_HIGH_BEAM, fun_info.high_beam); // 发送当前远光灯的状态
  97   2          }
  98   1      
  99   1          if (getEngineSpeed)
 100   1          {
 101   2              // 如果要获取发动机的转速
 102   2              getEngineSpeed = 0;
 103   2      
 104   2              // uart0_sendstr("getEngineSpeed\n");
 105   2      
 106   2              send_data(SEND_ENGINE_SPEED, fun_info.engine_speeed);
 107   2          }
 108   1      
 109   1          if (getSpeed)
 110   1          {
 111   2              // 如果要获取时速
 112   2              getSpeed = 0;
 113   2      
 114   2              // uart0_sendstr("getSpeed\n");
 115   2      
C51 COMPILER V9.60.7.0   INSTRUCTION_SCAN                                                  06/05/2024 13:36:14 PAGE 3   

 116   2      #ifdef INTERNATIONAL // 使用公制单位
 117   2      
 118   2              send_data(SEND_SPEED, fun_info.speed); // 发送当前采集到的车速（时速）
 119   2      
 120   2      #endif // INTERNATIONAL 使用公制单位
 121   2      
 122   2      #ifdef IMPERIAL // 使用英制单位
              
                      send_data(SEND_SPEED, fun_info.speed * 621 / 1000);
              
              #endif
 127   2          }
 128   1      
 129   1          if (getFuel)
 130   1          {
 131   2              // 如果要获取油量
 132   2              getFuel = 0;
 133   2      
 134   2              // uart0_sendstr("getFuel\n");
 135   2          }
 136   1      
 137   1          if (getWaterTemp)
 138   1          {
 139   2              // 如果要获取水温
 140   2              getWaterTemp = 0;
 141   2      
 142   2              // uart0_sendstr("getWaterTemp\n");
 143   2          }
 144   1      
 145   1          if (getTotalMileage)
 146   1          {
 147   2              // 如果要获取大计里程 / 得到了大计里程新的数据
 148   2              getTotalMileage = 0;
 149   2      
 150   2      #ifdef INTERNATIONAL // 公制单位
 151   2      
 152   2              // 只发送百米及以上的数据
 153   2              send_data(SEND_TOTAL_MILEAGE, mileage_info.total_mileage / 100);
 154   2      
 155   2      #endif // INTERNATIONAL 公制单位
 156   2      
 157   2      #ifdef IMPERIAL // 英制单位
              #if USE_MY_DEBUG
                      printf("total mileage: %lu * 0.1 mile", mileage_info.total_mileage * 62137 / 10000000);
              #endif // USE_MY_DEBUG
                     // 只发送0.1英里及以上的数据
                      send_data(SEND_TOTAL_MILEAGE, mileage_info.total_mileage * 62137 / 10000000);
              
              #endif // IMPERIAL 英制单位
 165   2          }
 166   1      
 167   1          if (getSubTotalMileage)
 168   1          {
 169   2              // 如果要获取小计里程 / 得到了小计里程新的数据
 170   2              getSubTotalMileage = 0;
 171   2      
 172   2      #ifdef INTERNATIONAL // 公制单位
 173   2      
 174   2              // 只发送千米及以上的数据
 175   2              send_data(SEND_SUBTOTAL_MILEAGE, mileage_info.subtotal_mileage / 1000);
 176   2      
 177   2      #endif // INTERNATIONAL 公制单位
C51 COMPILER V9.60.7.0   INSTRUCTION_SCAN                                                  06/05/2024 13:36:14 PAGE 4   

 178   2      
 179   2      #ifdef IMPERIAL // 英制单位
              #if USE_MY_DEBUG
                      printf("sub total mileage: %lu mile", mileage_info.subtotal_mileage * 62137 / 100000000);
              #endif // USE_MY_DEBUG
                     // 只发送英里及以上的数据
                      send_data(SEND_SUBTOTAL_MILEAGE, mileage_info.subtotal_mileage * 62137 / 100000000);
              
              #endif // IMPERIAL 英制单位
 187   2          }
 188   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    307    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =     13    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
