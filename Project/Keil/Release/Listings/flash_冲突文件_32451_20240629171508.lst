C51 COMPILER V9.60.7.0   FLASH                                                             06/06/2024 17:04:35 PAGE 1   


C51 COMPILER V9.60.7.0, COMPILATION OF MODULE FLASH
OBJECT MODULE PLACED IN .\Release\Objects\flash.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE ..\..\Hardware\flash.c LARGE OPTIMIZE(8,SIZE) BROWSE INTVECTOR(0X000C) I
                    -NCDIR(..\..\Libraries\Include;..\..\User;..\..\User\lib;..\..\Hardware;..\..\Lowpower) INTERVAL(3) DEBUG OBJECTEXTEND PR
                    -INT(.\Release\Listings\flash.lst) TABS(2) OBJECT(.\Release\Objects\flash.obj)

line level    source

   1          // 芯片内部的flash相关操作的源程序
   2          #include "flash.h"
   3          
   4          #define FLASH_START_ADDR (0x00) // 起始地址128byte对齐
   5          
   6          /**
   7           * @brief  flash erase sector
   8           * @param  addr : sector address in flash
   9           * @retval None
  10           */
  11          void flash_erase_sector(u8 addr)
  12          {
  13   1          FLASH_ADDR = 0x3F;
  14   1          FLASH_ADDR = addr;
  15   1          FLASH_PASSWORD = FLASH_PASSWORD(0xB9); // 写入操作密码
  16   1          FLASH_CON = FLASH_SER_TRG(0x1);        // 触发扇区擦除
  17   1      
  18   1          while (!(FLASH_STA & FLASH_SER_FLG(0x1)))
  19   1              ; // 等待扇区擦除空闲
  20   1      }
  21          
  22          /**
  23           * @brief  flash program
  24           * @param  addr   : Write data address in flash
  25           * @param  p_data : Write data to flash
  26           * @param  len    : Data length
  27           * @retval None
  28           */
  29          void flash_write(u8 addr, u8 *p_data, u8 len)
  30          {
  31   1          FLASH_ADDR = 0x3F;
  32   1          FLASH_ADDR = addr;
  33   1      
  34   1          while (len >= 1)
  35   1          {
  36   2              while (!(FLASH_STA & FLASH_PROG_FLG(0x1)))
  37   2                  ; // 等待烧录空闲
  38   2              FLASH_DATA = *(p_data++);
  39   2              FLASH_PASSWORD = FLASH_PASSWORD(0xB9); // 写入操作密码
  40   2              FLASH_CON = FLASH_PROG_TRG(0x1);       // 触发烧录
  41   2      
  42   2              len -= 1;
  43   2          }
  44   1      }
  45          
  46          /**
  47           * @brief  flash program
  48           * @param  addr   : Read data address in flash
  49           * @param  p_data : Read data to flash
  50           * @param  len    : Data length
  51           * @retval None
  52           */
  53          void flash_read(u8 addr, u8 *p_data, u8 len)
C51 COMPILER V9.60.7.0   FLASH                                                             06/06/2024 17:04:35 PAGE 2   

  54          {
  55   1          while (len != 0)
  56   1          {
  57   2              *(p_data++) = *((u8 code *)(0x3F00 + addr++));
  58   2              len--;
  59   2          }
  60   1      }
  61          
  62          // // 测试函数，测试能够实现flash的读写
  63          // // 使用前需要先初始化P12
  64          // void flash_test(void)
  65          // {
  66          //     unsigned int device_addr = 0x12345678;
  67          //     unsigned int buf = 0;
  68          
  69          //     flash_erase_sector(0x00);
  70          //     // 写入数据
  71          //     flash_write(0x00, (unsigned char *)&device_addr, sizeof(device_addr));
  72          //     // 读取数据
  73          //     flash_read(0x00, (unsigned char *)&buf, sizeof(buf));
  74          
  75          //     if ((const unsigned int)0x12345678 == buf)
  76          //     {
  77          //         P12 = 0;
  78          //     }
  79          // }
  80          
  81          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    124    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----      10
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
